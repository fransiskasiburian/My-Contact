name: Firebase App Distribution

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: 'Manual Debug Build'
        description: 'Release Notes'

jobs:
  upload-to-firebase:
    name: Upload APK to Firebase App Distribution
    runs-on: ubuntu-latest

    steps:
      # Checkout your repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Java JDK (with Zulu distribution)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'  # Specifies the JDK distribution (can be zulu, adopt, temurin, etc.)
          java-version: '11'

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Build the APK
      - name: Build APK
        run: ./gradlew assembleDebug

      # Upload the APK to Firebase App Distribution
      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1  # Using the existing Firebase distribution action
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}  # Firebase App ID stored in GitHub secrets
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers  # Group of testers defined in Firebase
          file: app/build/outputs/apk/debug/app-debug.apk  # Path to your APK file
          releaseNotes: "Release notes for this build"  # Optional release notes
